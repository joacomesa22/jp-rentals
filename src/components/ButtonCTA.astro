---
import type { HTMLTag, Polymorphic } from "astro/types"

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }>

const { as: Tag, class: className, ...props } = Astro.props
---

<Tag class:list={["button-style *:duration-500", className]} {...props}>
	<span><slot /></span>
</Tag>

<style>
	.button-style {
		padding: 10px 20px;
		display: inline-block;
		font-weight: 600;
		text-transform: uppercase;
		cursor: pointer;
		transform: skew(0deg);
		color: var(--darkest);
		border: 2px solid var(--lightYellow);
        border-radius: 6px;
		background: var(--lightYellow);
	}
	
	.button-style > span {
		display: inline-block;
		transform: skew(0deg);
        border-radius: 6px;
	}
	
	.button-style::before {
		content: "";
		position: absolute;
		inset: -2px;
		background: #fff;
		transform: scaleX(0);
		transform-origin: right;
        border-radius: 6px;
	}
	
	.button-style:hover {
		color: var(--darkBlue);
		scale: 1.1;
	}

	.button-style:hover::before {
		transform: scaleX(1);
		transform-origin: left;
	}

	@media (prefers-reduced-motion: no-preference) {
		.button-style {
			transition:
				color 0.15s ease-in,
				scale 0.15s ease-in;
		}
		.button-style::before {
			transition: transform 0.3s ease-in;
		}


		.button-style:hover {
			transition:
				color 0.15s ease-out 0.1s,
				scale 0.15s ease-out 0.1s;
		}


		.button-style:hover::before {
			transition: transform 0.3s ease-out 0.1s;
		}
	}
</style>